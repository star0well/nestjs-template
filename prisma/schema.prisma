// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement()) @db.UnsignedInt
  name       String       @unique
  password   String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  UserOnRole UserOnRole[]
}

model Menu {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  name        String
  pid         Int?         @db.UnsignedInt
  icon        String
  path        String
  type        Int
  sort        Int
  cPath       String       @default("") ///权限菜单请求地址
  parentInfo  Menu?        @relation("parentInfoChildren", fields: [pid], references: [id])
  children    Menu[]       @relation("parentInfoChildren")
  menuOnRoles RoleOnMenu[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Role {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  name        String
  describe    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  roleOnMenus RoleOnMenu[]
  UserOnRole  UserOnRole[]
}

model RoleOnMenu {
  id Int @id @default(autoincrement()) @db.UnsignedInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Role      Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId    Int      @db.UnsignedInt
  Menu      Menu     @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menuId    Int      @db.UnsignedInt
}

model UserOnRole {
  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @db.UnsignedInt

  Role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId Int  @db.UnsignedInt

  @@id([userId, roleId])
}
